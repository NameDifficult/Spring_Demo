<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <property name="configLocation" value="classpath:mybatis.config.xml"/>
    </bean>


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="factory"/>
        <property name="basePackage" value="mybatis.mappers"/>
    </bean>

    <!-- 声明式事务-->
    <!-- 1. 声明事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>
    <!--
    2. 声明业务方法的业务属性（隔离级别，传播行为，超时）
       id: 给业务方法配置事务段代码起名称

    -->
    <tx:advice id="serviceAdvice" transaction-manager="transactionManager">
        <!-- 给具体的业务方法增加事务的说明 -->
        <tx:attributes>
            <!-- 给具体的业务方法 说明它需要的业务属性
                name：业务方法的名称。（值可以是 1. 业务名称 2. 带有通配符的方法名称 3. 使用*）
            -->
            <tx:method name="buy" propagation="REQUIRED" isolation="DEFAULT" read-only="false"/>
        </tx:attributes>
    </tx:advice>

    <!-- 声明切入点表达式，表示哪些包中的类，类中方法参与事务-->
    <aop:config>
        <!--
            expression: 切入点表达式，表示那些类和类中的方法要参与事务
            id：切入点表达式的名称，唯一值
        -->
        <aop:pointcut id="servicePointCut" expression="execution(* service..*.*(..))"/>
        <!--
            关联切入点表达式和事务通知
            表示servicePointCut这个切入点中的方法和serviceAdvice的命名是相同的，就具有事务属性
         -->
        <aop:advisor advice-ref="serviceAdvice" pointcut-ref="servicePointCut"/>
    </aop:config>

    <bean id="studentService" class="service.serviceImpl.StudentServiceImpl">
        <property name="studentMapper" ref="studentMapper"/>
    </bean>

</beans>